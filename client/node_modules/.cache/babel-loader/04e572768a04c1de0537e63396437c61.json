{"ast":null,"code":"var _jsxFileName = \"/home/damtrix/Documents/start/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\nexport class SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Sign with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      label: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      handleChange: this.handleChange,\n      value: this.state.password,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \" Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"Sign in with google\"))));\n  }\n\n}\n\nconst mapStateToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, googleSignmaInStart)(SignIn);","map":{"version":3,"sources":["/home/damtrix/Documents/start/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","SignIn","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render","mapStateToProps","dispatch","googleSignmaInStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils'\nimport { googleSignInStart } from '../../redux/user/user.actions'\nimport './sign-in.styles.scss'\n\nexport class SignIn extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             email: '',\n             password: ''\n        }\n    }\n\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const {email, password} = this.state\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n             this.setState({ email: '', password: '' });\n        } catch(error) {\n            console.log(error);\n        }\n\n       \n    }\n\n    handleChange = event => {\n        const {value, name} = event.target\n        \n        this.setState({\n            [name]: value\n        })\n    }\n    \n    render() {\n        const { googleSignInStart } = this.props\n        return (\n            <div className = 'sign-in'>\n                <h1>I already have an account</h1>\n                <span>Sign with your email and password</span>\n\n                <form onSubmit = {this.handleSubmit}>\n                    <FormInput name = \"email\" \n                    type = \"email\" label = 'email' \n                    handleChange = {this.handleChange} \n                    value = {this.state.email} required />\n                    <FormInput name = \"password\" \n                    label = 'Password' type = \"password\" \n                    handleChange = {this.handleChange} \n                    value = {this.state.password} required />\n                    <div className = 'buttons'>\n                        <CustomButton type = 'submit'> Sign in</CustomButton>\n                        <CustomButton type = 'button' onClick = {googleSignInStart} isGoogleSignIn >\n                        Sign in with google\n                        </CustomButton>\n                    </div>\n                   \n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n})\n\nexport default connect(null, googleSignmaInStart)(SignIn)"]},"metadata":{},"sourceType":"module"}