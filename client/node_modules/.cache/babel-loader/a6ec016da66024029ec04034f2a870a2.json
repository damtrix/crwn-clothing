{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSucess, googleSignInFailure } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield user;\n  } catch (error) {}\n}\nexport function* onGoogleSigInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigInStart)]);\n}","map":{"version":3,"sources":["/home/damtrix/Documents/start/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","googleSignInSucess","googleSignInFailure","UserActionTypes","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","error","onGoogleSigInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,gBAAxD;AACA,OAAOC,eAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMP,IAAI,CAACQ,eAAL,CAAqBP,cAArB,CAArB;AACA,UAAMQ,OAAO,GAAG,MAAMV,IAAI,CAAEG,yBAAF,EAA6BK,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMH,IAA3B;AACH,GAJD,CAIE,OAAMI,KAAN,EAAa,CAEd;AAEJ;AAED,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAMhB,UAAU,CAACS,eAAe,CAACQ,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACH;AAGD,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAMhB,GAAG,CAAC,CAACC,IAAI,CAACa,kBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\nimport { googleSignInSucess, googleSignInFailure } from './user.actions'\nimport UserActionTypes  from './user.types'\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        const userRef = yield call (createUserProfileDocument, user)\n        const userSnapshot = yield user\n    } catch(error) {\n\n    }\n\n}\n\nexport function* onGoogleSigInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n\nexport function* userSagas() {\n    yield all([call(onGoogleSigInStart)])\n}"]},"metadata":{},"sourceType":"module"}