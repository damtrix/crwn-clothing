{"ast":null,"code":"var _jsxFileName = \"/home/damtrix/Documents/start/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionPage from '../collection/collection.componenet';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(Colle);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/damtrix/Documents/start/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionPage","CollectionsOverview","WithSpinner","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","Colle","ShopPage","Component","state","loading","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGL,WAAW,CAACM,KAAD,CAA7C;;AAEA,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAKH;;AAEDU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEQ,KAAK,CAACC,IAAK,EAAnC;AAAsC,MAAA,SAAS,EAAIvB,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAI,GAAEsB,KAAK,CAACC,IAAK,gBAA5B;AAA6C,MAAA,SAAS,EAAIxB,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzBkC;;AA4BvC,MAAMyB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,iBAAiB,EAAEe,cAAc,IAAIM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAerB,OAAO,CAClB,IADkB,EAElB0B,kBAFkB,CAAP,CAGThB,QAHS,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport CollectionPage from '../collection/collection.componenet'\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(Colle)\n\nclass ShopPage extends React.Component {\n    state = {\n        loading: true\n    }\n    unSubscribeFromSnapshot = null\n\n    componentDidMount() {\n        const { updateCollections } = this.props\n        const collectionRef = firestore.collection('collections')\n\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            updateCollections(collectionsMap)\n            this.setState({loading: false})\n        })\n    }\n\n    render(){\n        const { match } = this.props\n        return  (\n            <div className = 'shop-page'>\n                <Route exact path = {`${match.path}`} component = {CollectionsOverview} />\n                <Route path ={`${match.path}/:collectionId`} component = {CollectionPage} />\n            </div>\n    )\n    }\n}\n        \nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(\n    null, \n    mapDispatchToProps\n    )(ShopPage)\n"]},"metadata":{},"sourceType":"module"}