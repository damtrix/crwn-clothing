{"ast":null,"code":"var _jsxFileName = \"/home/damtrix/Documents/start/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const {\n    userCredentials,\n    setCredentials\n  } = useState({\n    eamil: '',\n    password: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Sign with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"email\",\n    handleChange: this.handleChange,\n    value: this.state.email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    handleChange: this.handleChange,\n    value: this.state.password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \" Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Sign in with google\"))));\n};\n\nconst mapStateToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapStateToProps)(SignIn);","map":{"version":3,"sources":["/home/damtrix/Documents/start/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","eamil","password","handleSubmit","event","preventDefault","email","handleChange","value","name","target","state","mapStateToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'\nimport './sign-in.styles.scss'\n\nconst SignIn = ({ emailSignInStart, googleSignInStart  }) => {\n    const { userCredentials, setCredentials } = useState({ eamil: '', password: ''})\n\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        const {email, password} = userCredentials\n\n        emailSignInStart( email, password)\n       \n    }\n\n    const handleChange = event => {\n        const {value, name} = event.target\n        \n        setCredentials({ ...userCredentials, [name]: value })\n    }\n\n\n        return (\n            <div className = 'sign-in'>\n                <h1>I already have an account</h1>\n                <span>Sign with your email and password</span>\n\n                <form onSubmit = {this.handleSubmit}>\n                    <FormInput name = \"email\" \n                    type = \"email\" label = 'email' \n                    handleChange = {this.handleChange} \n                    value = {this.state.email} required />\n                    <FormInput name = \"password\" \n                    label = 'Password' type = \"password\" \n                    handleChange = {this.handleChange} \n                    value = {this.state.password} required />\n                    <div className = 'buttons'>\n                        <CustomButton type = 'submit'> Sign in</CustomButton>\n                        <CustomButton type = 'button' onClick = {googleSignInStart} isGoogleSignIn >\n                        Sign in with google\n                        </CustomButton>\n                    </div>\n                   \n                </form>\n            </div>\n        )\n        }\n\nconst mapStateToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(null, mapStateToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}