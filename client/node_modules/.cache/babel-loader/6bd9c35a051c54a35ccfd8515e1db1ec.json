{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailue, emailSignInSucess, emailSignInFailue } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailue(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmail(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailue(error));\n  }\n}\nexport function* onGoogleSigInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigInStart)]);\n}","map":{"version":3,"sources":["/home/damtrix/Documents/start/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailue","emailSignInSucess","emailSignInFailue","UserActionTypes","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","onGoogleSigInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,EAAkDC,iBAAlD,EAAqEC,iBAArE,QAA8F,gBAA9F;AACA,OAAOC,eAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAC5B,MAAI;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMT,IAAI,CAACU,eAAL,CAAqBT,cAArB,CAArB;AACA,UAAMU,OAAO,GAAG,MAAMZ,IAAI,CAAEG,yBAAF,EAA6BO,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACM,mBAAmB,CAAC;AAC1BW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADS;AAE1B,SAAGF,YAAY,CAACG,IAAb;AAFuB,KAAD,CAApB,CAAT;AAIH,GARG,CAQF,OAAMC,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACO,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAA0D;AAC7D,MAAI;AACA,UAAM;AAACX,MAAAA;AAAD,QAAS,MAAMT,IAAI,CAACiB,eAAL,CAAqBE,KAArB,EAA4BC,QAA5B,CAArB;AACA,UAAMT,OAAO,GAAG,MAAMZ,IAAI,CAAEG,yBAAF,EAA6BO,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACM,mBAAmB,CAAC;AAC1BW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADS;AAE1B,SAAGF,YAAY,CAACG,IAAb;AAFuB,KAAD,CAApB,CAAT;AAIH,GARD,CAQE,OAAMC,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACO,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUK,kBAAV,GAA+B;AAClC,QAAMzB,UAAU,CAACW,eAAe,CAACe,oBAAjB,EAAuCd,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACW,eAAe,CAACiB,mBAAjB,EAAsCP,eAAtC,CAAhB;AACH;AAGD,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACsB,kBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\nimport { googleSignInSuccess, googleSignInFailue, emailSignInSucess, emailSignInFailue } from './user.actions'\nimport UserActionTypes  from './user.types'\n\nexport function* signInWithGoogle() {\n        try {\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        const userRef = yield call (createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get()\n        yield put(googleSignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    } catch(error) {\n        yield put(googleSignInFailue(error))\n    }\n\n}\n\nexport function* signInWithEmail({payload: { email, password }}) {\n    try {\n        const {user} = yield auth.signInWithEmail(email, password)\n        const userRef = yield call (createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get()\n        yield put(googleSignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    } catch(error) {\n        yield put(googleSignInFailue(error))\n    }\n\n}\n\nexport function* onGoogleSigInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\n\nexport function* userSagas() {\n    yield all([call(onGoogleSigInStart)])\n}"]},"metadata":{},"sourceType":"module"}