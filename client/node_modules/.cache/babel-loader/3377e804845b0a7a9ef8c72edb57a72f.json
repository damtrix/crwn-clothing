{"ast":null,"code":"var _jsxFileName = \"/home/damtrix/Documents/start/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport CollectionPage from '../collection/collection.componenet';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionsAsync } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsAsync\n    } = this.props;\n    fetchCollectionsAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 76\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 83\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/damtrix/Documents/start/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionPage","CollectionsOverview","WithSpinner","fetchCollectionsAsync","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,gCAAtE;AAEA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMI,yBAAyB,GAAGH,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEL,MAAAA;AAAF,QAA4B,KAAKM,KAAvC;AACAN,IAAAA,qBAAqB;AACxB;;AAEDO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA+BC,MAAAA;AAA/B,QAAsD,KAAKJ,KAAjE;AAEA,wBACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACG,IAAK,EAAnC;AAAsC,MAAA,MAAM,EAAKL,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAIG;AAA7C,SAAuEH,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAI,GAAEE,KAAK,CAACG,IAAK,gBAA5B;AAA6C,MAAA,MAAM,EAAKL,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAII;AAAxC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAhBkC;;AAmBvC,MAAMM,eAAe,GAAGnB,wBAAwB,CAAC;AAC7CgB,EAAAA,oBAAoB,EAAEd,0BADuB;AAE7Ce,EAAAA,kBAAkB,EAAEd;AAFyB,CAAD,CAAhD;;AAKA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,qBAAqB,EAAE,MAAMc,QAAQ,CAACd,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeN,OAAO,CAClBkB,eADkB,EAElBC,kBAFkB,CAAP,CAGTV,QAHS,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom'\nimport { createStructuredSelector } from 'reselect'\nimport { connect } from 'react-redux'\n\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector'\n\nimport CollectionPage from '../collection/collection.componenet'\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport { fetchCollectionsAsync } from '../../redux/shop/shop.actions'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n\n    componentDidMount() {\n        const { fetchCollectionsAsync } = this.props\n        fetchCollectionsAsync()    \n    }\n\n    render(){\n        const { match, isCollectionFetching, isCollectionLoaded } = this.props\n     \n        return  (\n            <div className = 'shop-page'>\n                <Route exact path = {`${match.path}`} render = {(props) => <CollectionsOverviewWithSpinner isLoading = {isCollectionFetching} {...props} /> } />\n                <Route path ={`${match.path}/:collectionId`} render = {(props) => <CollectionPageWithSpinner isLoading = {isCollectionLoaded} {...props} /> } />\n            </div>\n    )\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollectionLoaded: selectIsCollectionsLoaded\n})\n        \nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n})\n\nexport default connect(\n    mapStateToProps, \n    mapDispatchToProps\n    )(ShopPage)\n"]},"metadata":{},"sourceType":"module"}