{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrectUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailue, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailue(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailue(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailue(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrectUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailue(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onGoogleSigInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/home/damtrix/Documents/start/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrectUser","signInSuccess","signInFailue","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","onCheckUserSession","CHECK_USER_SESSION","onGoogleSigInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrectUser } from '../../firebase/firebase.utils'\nimport { \n    signInSuccess, \n    signInFailue, \n    signOutFailure, \n    signOutSuccess, \n    signUpFailure,\n    signUpSuccess\n } from './user.actions'\nimport UserActionTypes  from './user.types'\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try{\n    const userRef = yield call (createUserProfileDocument, userAuth)\n        const userSnapshot = yield userRef.get()\n        yield put(signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    } catch (error) {\n        yield put(signInFailue(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n        try {\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        yield getSnapshotFromUserAuth(user)\n    } catch(error) {\n        yield put(signInFailue(error))\n    }\n\n}\n\nexport function* signInWithEmail({payload: { email, password }}) {\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\n        yield getSnapshotFromUserAuth(user)\n    } catch(error) {\n        yield put(signInFailue(error))\n    }\n\n}\n\nexport function* isUserAuthenticated() {\ntry {\n    const userAuth = yield getCurrectUser()\n    if(!userAuth) return\n    yield getSnapshotFromUserAuth(userAuth)\n} catch(error) {\n    yield put(signInFailue(error))\n}\n}\n\nexport  function* signOut() {\ntry {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n} catch(error) {\n    yield put(signOutFailure(error))\n}\n}\n\nexport function* signUp({payload: {email, password, displayName}}) {\n    try {\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password)\n        yield put(signUpSuccess({user, additionalData: { displayName }}))\n    } catch(error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated )\n}\n\nexport function* onGoogleSigInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\n\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSigInStart), \n        call(onEmailSignInStart), \n        call(onCheckUserSession),\n        call(onSignOutStart)\n    ])\n} "]},"metadata":{},"sourceType":"module"}