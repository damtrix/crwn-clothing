{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetctCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/damtrix/Documents/start/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetctCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsAsync","dispatch","collectionRef","collection","fetchCollectionsStart","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAc,KAAK;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAL,CAA/C;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAACE;AAF8C,CAAnB,CAAhC;AAKP,OAAO,MAAME,qBAAqB,GAAG,MAAM;AACvC,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACG,qBAAqB,EAAtB,CAAR;AAGAF,IAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMb,cAAc,GAAGL,+BAA+B,CAACkB,QAAD,CAAtD;AACAN,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGc,KAHH,CAGSC,KAAK,IAAIR,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport const fetctCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess  = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload:errorMessage\n})\n\nexport const fetchCollectionsAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections')\n        dispatch(fetchCollectionsStart())\n\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            dispatch(fetchCollectionsSuccess(collectionsMap))\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n    }\n}"]},"metadata":{},"sourceType":"module"}